events {

}

http {
    upstream auth-service {
        server auth-service.default.svc.cluster.local:8081;
    }
    upstream user-service {
        server user-service.default.svc.cluster.local:8082;
    }
    upstream event-service {
        server event-service.default.svc.cluster.local;
    }
    upstream streaming-service {
        server streaming-service.default.svc.cluster.local;
    }
    upstream inventory-and-reward-service {
        server inventory-and-reward-service.default.svc.cluster.local;
    }
    upstream statistics-service {
        server statistics-service.default.svc.cluster.local;
    }

    # The http block includes settings for handling HTTP traffic.

    include       mime.types;
    # Specifies the file that defines MIME types for various file extensions.

    default_type  application/octet-stream;
    # Sets the default MIME type for files when the type is not determined.

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # Defines a custom log format called 'main' for access logs.

    access_log  /var/log/nginx/access.log  main;
    # Specifies the file and format for access logs.

    error_log   /var/log/nginx/error.log warn;
    # Specifies the file and log level for error logs.

    sendfile        on;
    # Enables the use of sendfile for efficient file transfer.

    keepalive_timeout  65;
    # Sets the timeout for persistent connections with the client.

    # upstream auth-service {
    #     server auth-service:8081; # Ensure the correct port and service discovery mechanism
    # }
    # upstream user-service {
    #     server localhost:8082;
    # }
    # upstream event-service {
    #     server localhost:8083;
    # }
    # upstream streaming-service {
    #     server localhost:8086;
    #     server localhost:8085;
    # }
    # upstream inventory-and-reward-service {
    #     server localhost:8087;
    # }
    # upstream statistics-service {
    #     server localhost:8015;
    # }
    
    server {
        listen 80;
        server_name localhost;


        location = /validate {
            internal;
            proxy_pass http://auth-service/api/v1/auth/validate-token;  # Adjust this to your actual token validation endpoint
            proxy_pass_request_body off;  # Do not pass the body to the auth service
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Authorization $http_authorization;
        }

        location /api/v1/auth/ {
            proxy_pass http://auth-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


        location /api/v1/users/ {
            auth_request /validate;
            proxy_pass http://user-service;
        }

        location /api/v1/brands/ {
            auth_request /validate;
            proxy_pass http://user-service;
        }

        location /api/v1/players/ {
            auth_request /validate;
            proxy_pass http://user-service;
        }

        location /api/v1/admins/ {
            auth_request /validate;
            proxy_pass http://user-service;
        }

        location /api/v1/sessions/ {
            auth_request /validate;
            proxy_pass http://user-service;
        }

        location /api/v1/events/ {
            auth_request /validate;
            proxy_pass http://event-service;
        }

        location /api/v1/brands-cooperation/ {
            auth_request /validate;
            proxy_pass http://event-service;
        }

        location /api/v1/favourite-events/ {
            auth_request /validate;
            proxy_pass http://event-service;
        }

        location /api/v1/game/ {
            auth_request /validate;
            proxy_pass http://streaming-service;
        }

        location /api/v1/vouchers/ {
            auth_request /validate;
            proxy_pass http://inventory-and-reward-service;
        }

        location /api/v1/items/ {
            auth_request /validate;
            proxy_pass http://inventory-and-reward-service;
        }

        location /api/v1/item-repos/ {
            auth_request /validate;
            proxy_pass http://inventory-and-reward-service;
        }

        location /api/v1/gifts/ {
            auth_request /validate;
            proxy_pass http://inventory-and-reward-service;
        }

        location /api/v1/statistics/ {
            auth_request /validate;
            proxy_pass http://statistics-service;
        }

        # General CORS settings
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST' || $request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            }
        }
    }
}
