version: "3.8"

services: 
  service-registry:
    image: service-registry:latest
    build:
      context: ./src/service-registry
    ports:
      - "8761:8761"
    environment:
      SPRING_APPLICATION_NAME: service-registry
      SERVER_PORT: 8761
      EUREKA_INSTANCE_HOSTNAME: localhost
      EUREKA_CLIENT_FETCH_REGISTRY: false
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: false
    volumes:
      - service-registry-data:/var/service-registry
    networks: 
      - microservices-network

  api-gateway:
    image: api-gateway:latest
    build:
      context: ./src/api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - service-registry
      - auth-service
      - user-service
      # - notification-service
      # - event-service
      # - statistics-service
      # - turn-service
      # - game-service
      # - inventory-and-reward-service
    environment:
      SPRING_APPLICATION_NAME: api-gateway
      SERVER_PORT: 8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
      MANAGEMENT_ENDPOINT_GATEWAY_ENABLED: true
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: true
      EUREKA_CLIENT_FETCH_REGISTRY: true
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED: true
      SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWER_CASE_SERVICE_ID: true
    volumes:
      - api-gateway-data:/var/api-gateway
    networks: 
      - microservices-network

  auth-service: 
    image: auth-service:latest
    build:
      context: ./src/auth-service
    ports: 
      - "8081:8081"
    depends_on:
      - service-registry
    environment:
      SPRING_APPLICATION_NAME: auth-service
      SERVER_PORT: 8081
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka
    volumes:
      - auth-service-data:/var/auth-service
    networks: 
      - microservices-network

  user-service: 
    image: user-service:latest
    build:
      context: ./src/user-service
    ports: 
      - "8082:8082"
    depends_on:
      - service-registry
      - authdb
    environment: 
      SPRING_APPLICATION_NAME: user-service
      SERVER_PORT: 8082
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:postgresql://authdb:5432/authdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_GENERATE_DDL: true
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: nqquy21@clc.fitus.edu.vn
      SPRING_MAIL_PASSWORD: ljkwzpvsurwnejai
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
      SPRINGDOC_API_DOCS_PATH: /v3/api-docs
      SPRINGDOC_SWAGGER_UI_PATH: /swagger-ui.html
      SPRING_PROFILES_ACTIVE: prod
    networks:  
      - microservices-network

  # notification-service: 
  #   image: notification-service:latest
  #   build:
  #     context: ./src/notification-service
  #   ports: 
  #     - "8082:8082"
  #   depends_on:
  #     - service-registry
  #   volumes:
  #     - notification-service-data:/var/notification-service
  #   networks: 
  #     - microservices-network

  # event-service: 
  #   image: event-service:latest
  #   build:
  #     context: ./src/event-service
  #   ports: 
  #     - "8083:8083"
  #   depends_on:
  #     - service-registry
  #     - eventdb
  #   environment: 
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://eventdb:5432/eventdb
  #     - SPRING_DATASOURCE_USERNAME=eventuser
  #     - SPRING_DATASOURCE_PASSWORD=eventpassword
  #   volumes:
  #     - event-service-data:/var/event-service
  #   networks: 
  #     - microservices-network

  # statistics-service: 
  #   image: statistics-service:latest
  #   build:
  #     context: ./src/statistics-service
  #   ports: 
  #     - "8084:8084"
  #   depends_on:
  #     - service-registry
  #   volumes:
  #     - statistics-service-data:/var/statistics-service
  #   networks: 
  #     - microservices-network

  # turn-service: 
  #   image: turn-service:latest
  #   build:
  #     context: ./src/turn-service
  #   ports: 
  #     - "8085:8085"
  #   depends_on:
  #     - service-registry
  #   volumes:
  #     - turn-service-data:/var/turn-service
  #   networks: 
  #     - microservices-network

  # game-service: 
  #   image: game-service:latest
  #   build:
  #     context: ./src/game-service
  #   ports: 
  #     - "8086:8086"
  #   depends_on:
  #     - service-registry
  #     - gamedb
  #   environment: 
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://gamedb:5432/gamedb
  #     - SPRING_DATASOURCE_USERNAME=gameuser
  #     - SPRING_DATASOURCE_PASSWORD=gamepassword
  #   volumes:
  #     - game-service-data:/var/game-service
  #   networks: 
  #     - microservices-network

  # inventory-and-reward-service: 
  #   image: inventory-and-reward-service:latest
  #   build:
  #     context: ./src/inventory-and-reward-service
  #   ports: 
  #     - "8087:8087"
  #   depends_on:
  #     - service-registry
  #     - inventory-and-reward-db
  #   environment: 
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://inventory-and-reward-db:5432/inventoryrewarddb
  #     - SPRING_DATASOURCE_USERNAME=inventoryuser
  #     - SPRING_DATASOURCE_PASSWORD=inventorypassword
  #   volumes:
  #     - inventory-and-reward-service-data:/var/inventory-and-reward-service
  #   networks: 
  #     - microservices-network

  pgadmin:
    image: elestio/pgadmin:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8888:80"
    depends_on:
      - authdb
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - microservices-network
      
  authdb:
    image: postgres:16.3-bullseye
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - authdb-data:/var/lib/postgresql/data
    networks:
      - microservices-network

#   eventdb:
#     image: postgres:13
#     environment:
#       POSTGRES_DB: eventdb
#       POSTGRES_USER: eventuser
#       POSTGRES_PASSWORD: eventpassword
#     ports:
#       - "5433:5432"
#     volumes:
#       - eventdb-data:/var/lib/postgresql/data
#     networks:
#       - microservices-network

#   gamedb:
#     image: postgres:13
#     environment:
#       POSTGRES_DB: gamedb
#       POSTGRES_USER: gameuser
#       POSTGRES_PASSWORD: gamepassword
#     ports:
#       - "5434:5432"
#     volumes:
#       - gamedb-data:/var/lib/postgresql/data
#     networks:
#       - microservices-network

#   inventory-and-reward-db:
#     image: postgres:13
#     environment:
#       POSTGRES_DB: inventoryrewarddb
#       POSTGRES_USER: inventoryuser
#       POSTGRES_PASSWORD: inventorypassword
#     ports:
#       - "5435:5432"
#     volumes:
#       - inventory-and-reward-db-data:/var/lib/postgresql/data
#     networks:
#       - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  service-registry-data:
  api-gateway-data:
  auth-service-data:
  user-service-data:
  # notification-service-data:
  # event-service-data:
  # statistics-service-data:
  # turn-service-data:
  # game-service-data:
  # inventory-and-reward-service-data:
  authdb-data:
  pgadmin-data:
  # eventdb-data:
  # gamedb-data:
  # inventory-and-reward-db-data: